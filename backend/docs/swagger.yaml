definitions:
  httputil.HTTPError:
    properties:
      error:
        example: password field is empty
        type: string
      status:
        example: bad request
        type: string
    type: object
  models.Address:
    properties:
      building:
        type: string
      city:
        type: string
      created_at:
        type: string
      door_number:
        type: string
      entrance:
        type: string
      floor:
        type: string
      id:
        type: string
      street:
        type: string
      updated_at:
        type: string
    type: object
  models.Consumable:
    properties:
      amount:
        minimum: 1
        type: integer
      ean_code:
        type: string
      id:
        type: string
      name:
        type: string
    required:
    - amount
    - ean_code
    - name
    type: object
  models.NewUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      patronymic:
        type: string
      phone_number:
        type: string
      surname:
        type: string
    required:
    - email
    - name
    - password
    - phone_number
    - surname
    type: object
  models.Order:
    properties:
      address:
        $ref: '#/definitions/models.Address'
      area:
        type: number
      comment:
        type: string
      created_at:
        type: string
      date_time:
        type: string
      id:
        type: string
      number_of_bathrooms:
        type: integer
      number_of_rooms:
        type: integer
      pollution:
        type: integer
      price:
        type: number
      required_workers:
        type: integer
      services:
        items:
          type: string
        type: array
      status:
        type: string
      status_log:
        items:
          $ref: '#/definitions/models.StatusLog'
        type: array
      updated_at:
        type: string
      user_id:
        type: string
      workers:
        items:
          type: string
        type: array
    type: object
  models.Service:
    properties:
      consumables:
        items:
          $ref: '#/definitions/models.Consumable'
        type: array
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
      workers_quantity:
        type: integer
    required:
    - consumables
    - name
    - price
    - workers_quantity
    type: object
  models.StatusLog:
    properties:
      created_at:
        type: string
      id:
        type: string
      new_status:
        type: string
      prev_status:
        type: string
    type: object
  models.User:
    properties:
      addresses:
        items:
          $ref: '#/definitions/models.Address'
        type: array
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      patronymic:
        type: string
      phone_number:
        type: string
      surname:
        type: string
      updated_at:
        type: string
      user_type:
        type: string
    required:
    - email
    - name
    - password
    - phone_number
    - surname
    type: object
  models.UserCredentials:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  types.CreateResponse:
    properties:
      id:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: If user exist in database set jwt cookie
      parameters:
      - description: User credentials
        in: body
        name: Creds
        required: true
        schema:
          $ref: '#/definitions/models.UserCredentials'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Set cookie with jwt
      tags:
      - Auth
  /api/auth/logout:
    post:
      description: If cookie exist, remove it
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Remove cookie with jwt
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Create user with user_type=CLIENT in database
      parameters:
      - description: New user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.NewUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Create user with user_type=CLIENT
      tags:
      - Auth
  /api/v1/dumps/:
    get:
      description: Get dump as json file
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get dump as json file
      tags:
      - Dump
    post:
      consumes:
      - multipart/form-data
      description: Post dump as json file
      parameters:
      - description: json file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Post dump as json file
      tags:
      - Dump
  /api/v1/orders:
    get:
      consumes:
      - application/json
      description: Get all orders
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: string
      - description: User name
        in: query
        name: user_name
        type: string
      - description: User surname
        in: query
        name: user_surname
        type: string
      - description: User patronymic
        in: query
        name: user_patronymic
        type: string
      - description: User email
        in: query
        name: user_email
        type: string
      - description: Address city
        in: query
        name: address_city
        type: string
      - description: Address street
        in: query
        name: address_street
        type: string
      - description: Address building
        in: query
        name: address_building
        type: string
      - description: Address entrance
        in: query
        name: address_entrance
        type: string
      - description: Address floor
        in: query
        name: address_floor
        type: string
      - description: Address door number
        in: query
        name: address_door_number
        type: string
      - description: Worker name
        in: query
        name: worker_name
        type: string
      - description: Worker surname
        in: query
        name: worker_surname
        type: string
      - description: Worker patronymic
        in: query
        name: worker_patronymic
        type: string
      - description: Worker email
        in: query
        name: worker_email
        type: string
      - collectionFormat: csv
        description: Workers ID
        in: query
        items:
          type: string
        name: workers_id
        type: array
      - collectionFormat: csv
        description: Statuses
        in: query
        items:
          type: string
        name: statuses
        type: array
      - collectionFormat: csv
        description: Services
        in: query
        items:
          type: string
        name: services
        type: array
      - description: Date time begin (string RFC3339)
        in: query
        name: date_time_begin
        type: string
      - description: Date time end (string RFC3339)
        in: query
        name: date_time_end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Create order
      parameters:
      - description: Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Create order
      tags:
      - Orders
  /api/v1/orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete order by id
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Delete order
      tags:
      - Orders
    get:
      consumes:
      - application/json
      description: Get order by id
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get order
      tags:
      - Orders
    put:
      consumes:
      - application/json
      description: Update order by id
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Update order
      tags:
      - Orders
  /api/v1/services:
    get:
      description: Get array of services info from database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Service'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get array of services info
      tags:
      - Services
    post:
      consumes:
      - application/json
      description: Creates new service & returns it's id
      parameters:
      - description: Service info
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/models.Service'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Creates new service
      tags:
      - Services
  /api/v1/services/{id}:
    delete:
      description: Delete service from database
      parameters:
      - description: Service id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Deletes service
      tags:
      - Services
    get:
      description: Get service from database
      parameters:
      - description: Service id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Service'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get service info
      tags:
      - Services
    put:
      consumes:
      - application/json
      description: Update service info in database, if exist
      parameters:
      - description: Service id
        in: path
        name: id
        required: true
        type: string
      - description: Service info
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/models.Service'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Update service info
      tags:
      - Services
  /api/v1/users:
    get:
      description: Get list of users from database
      parameters:
      - description: specifying user_type
        in: query
        name: type
        type: string
      - description: user name
        in: query
        name: name
        type: string
      - description: user surname
        in: query
        name: surname
        type: string
      - description: user patronymic
        in: query
        name: patronymic
        type: string
      - description: user email
        in: query
        name: email
        type: string
      - description: created_at begin (string RFC3339)
        in: query
        name: created_at_begin
        type: string
      - description: created_at end (string RFC3339)
        in: query
        name: created_at_end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get list of users
      tags:
      - Users
    post:
      description: Creates user with user_type=WORKER and returns it's id
      parameters:
      - description: New worker info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Creates user with user_type=WORKER
      tags:
      - Users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user from database
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Delete user
      tags:
      - Users
    get:
      description: Get user from database
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get user info
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user info
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Update user
      tags:
      - Users
  /api/v1/users/{id}/addresses:
    get:
      description: Get list of user addresses from database
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Address'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get list of user addresses
      tags:
      - Users
    post:
      description: Create new user address from database
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      - description: address info
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/models.Address'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Create new user address
      tags:
      - Users
  /api/v1/users/{id}/addresses/{address_id}:
    delete:
      description: Delete user address by id from database
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      - description: address_id
        in: path
        name: address_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Delete user address by id
      tags:
      - Users
    get:
      description: Get user address from database
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      - description: address_id
        in: path
        name: address_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Address'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get user address
      tags:
      - Users
    put:
      description: Update user address by id from database
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      - description: address_id
        in: path
        name: address_id
        required: true
        type: string
      - description: address_id
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/models.Address'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Update user address by id
      tags:
      - Users
swagger: "2.0"
